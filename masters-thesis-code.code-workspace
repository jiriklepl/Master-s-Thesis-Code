{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		"[haskell]": {
			"editor.tabSize": 2,
			"editor.insertSpaces": true,
			"editor.detectIndentation": false
		},
		"files.insertFinalNewline": true,
		"files.trimTrailingWhitespace": true,
		"todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^|--(\\s*\\|)?)\\s*($TAGS)|^\\s*- \\[( |~)\\]|undefined)",
		"todo-tree.general.tags": [
			"BUG",
			"HACK",
			"FIXME",
			"TODO"
		],
		"bracketPairColorizer.consecutivePairColors": [
			"()",
			"[]",
			"{}",
			[
				"Khaki",
				"Orchid",
				"LightSkyBlue",
				"darkorange"
			],
			"Red"
		],
		"cSpell.words": [
			"Actuals",
			"annot",
			"annots",
			"assumps",
			"Bimap",
			"Blockified",
			"Blockifier",
			"blockify",
			"blockifying",
			"byteorder",
			"compl",
			"concat",
			"cond",
			"constexpr",
			"consting",
			"Constness",
			"constnesses",
			"Consts",
			"conts",
			"conv",
			"deref",
			"Dioid",
			"dquotes",
			"Eithers",
			"elems",
			"Fallbackable",
			"fmap",
			"foldl",
			"foldr",
			"Frth",
			"gmap",
			"Handlize",
			"hsep",
			"Inferencer",
			"kinded",
			"Kinding",
			"lshr",
			"lvals",
			"lvalue",
			"lvalues",
			"lvref",
			"mempty",
			"memsize",
			"mfull",
			"Monoid",
			"monomorphization",
			"nums",
			"nvals",
			"OVERLAPPABLE",
			"Paren",
			"parens",
			"pointersize",
			"polytype",
			"ppllvm",
			"Preprocess",
			"Prettyprinter",
			"regs",
			"Reparse",
			"scrutinee",
			"Semigroup",
			"squotes",
			"stackdata",
			"Struct",
			"Structs",
			"subtyping",
			"Succ",
			"Targs",
			"Typize",
			"udiv",
			"uncurry",
			"unifs",
			"unwords",
			"urem",
			"vsep",
			"wordsize"
		],
		"todo-tree.tree.showCountsInTree": true,
	},
	"extensions": {
		"recommendations": [
			"mogeko.haskell-extension-pack"
		]
	},
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "build",
				"type": "shell",
				"args": [
					"build",
					"all"
				],
				"group": {
					"kind": "build",
					"isDefault": true
				},
				"command": "cabal",
				"problemMatcher": []
			}
		]
	}
}
