digraph {
    node [style="filled"]

    subgraph ends {
        node [shape="ellipse"]

        Source [fillcolor="lightblue"]
        LLVM [fillcolor="lightblue"]
    }

    subgraph data {
        node [shape="parallelogram"]

        AST [fillcolor="lightgreen"]
        Facts [label="Type facts", fillcolor="lightgreen"]
        Variables [label="Variables", fillcolor="lightgreen"]
        ASTTypeHandles [label="AST\nwith type handles", fillcolor="lightgreen"]
        Judgments [label="Type Judgments", fillcolor="lightgreen"]
        FlatAST [label="Flat AST", fillcolor="lightgreen"]
        BlockifiedAST [label="Blockified AST", fillcolor="lightgreen"]
        BlockifiedASTAnnots [label="Blockified AST\nwith analyzed flow", fillcolor="lightgreen"]
        MonoAST [label="Monomophized AST", fillcolor="yellow"]
    }

    subgraph components {
        node [shape="component"]

        Parser [fillcolor="lightgreen"]
        Flattener [fillcolor="lightgreen"]
        InferPre [label="Type inference\npreprocessing", fillcolor="lightgreen"]
        VariableMining [label="Variables collection", fillcolor="lightgreen"]
        Infer [label="Type inference", fillcolor="yellow"]
        Blockifier [fillcolor="lightgreen"]
        FlowAnalysis [label="Flow analysis", fillcolor="lightgreen"]
        Monomorphization [fillcolor="orange"]
        Translator [fillcolor="yellow"]
    }

    subgraph decisions {
        node [shape="diamond"]
    }

    Source -> Parser -> AST
    AST -> Flattener -> FlatAST
    AST -> VariableMining -> Variables -> InferPre
    AST -> InferPre -> { Facts ASTTypeHandles } -> Infer -> Judgments -> Monomorphization
    FlatAST -> Blockifier -> BlockifiedAST
    BlockifiedAST -> FlowAnalysis -> BlockifiedASTAnnots
    BlockifiedASTAnnots -> Monomorphization -> MonoAST
    MonoAST -> Translator -> LLVM
}
