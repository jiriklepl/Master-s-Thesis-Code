digraph {
    node [style="filled"]

    subgraph terminals {
        node [shape="ellipse", fillcolor="lightblue"]

        Source [label="CHMMM source"]
        LLVM [label="LLVM code"]
    }

    subgraph data {
        node [shape="parallelogram"]

        subgraph greenData {
            node [fillcolor="lightgreen"]

            AST
            ASTErrors [label="AST errors"]
            UnifyErrors [label="Unification errors"]
            BlockifierErrors [label="Blockifier errors"]
            MonomorphizeErrors [label="Monomorphization errors"]
            Facts [label="Type facts"]
            Variables [label="Variables"]
            ASTTypeHoles [label="AST\nwith type holes"]
            Judgments [label="Type Judgments"]
            FlatAST [label="Flat AST"]
            BlockifiedAST [label="Blockified AST"]
            BlockifiedASTAnnots [label="Blockified AST\nwith analyzed flow"]
            MonoAST [label="Monomorphized AST"]
        }

    }

    subgraph components {
        node [shape="component"]

        subgraph greenComponents {
            node [fillcolor="lightgreen"]

            FunDepSimpl [label="Functional dependencies\nsimplifier"]
            AnnotMining  [label="Annotation mining"]
            Parser
            Flattener
            InferPre [label="Type inference\npreprocessing"]
            VariableMining [label="Variables collection\n(repeated)"]
            Blockifier
            FlowAnalysis [label="Flow analysis"]
        }

        subgraph yellowComponents {
            node [fillcolor="yellow"]

            Infer [label="Type inference"]
            Monomorphization
        }

        Mangling [fillcolor="orange"]
        Translator [fillcolor="orange"]
    }

    subgraph decisions {
        node [shape="diamond"]
    }


    Source -> Parser -> AST
    AST -> Flattener -> FlatAST
    AST -> VariableMining -> Variables -> InferPre
    AST -> InferPre -> { Facts ASTTypeHoles }
    Facts -> { FunDepSimpl AnnotMining }
    { FunDepSimpl ASTTypeHoles AnnotMining } -> Infer -> Judgments -> Monomorphization
    { Infer Monomorphization } -> UnifyErrors
    FlatAST -> Blockifier -> {BlockifiedAST BlockifierErrors }
    BlockifiedAST -> FlowAnalysis -> BlockifiedASTAnnots
    { Blockifier FlowAnalysis VariableMining} -> ASTErrors
    BlockifiedASTAnnots -> Monomorphization -> {Mangling -> MonoAST}
    Monomorphization -> MonomorphizeErrors
    MonoAST -> Translator -> LLVM
}
